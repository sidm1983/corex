# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- develop

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  Build.Configuration: 'Release'

steps:
- script: dotnet build -c $(Build.Configuration)
  displayName: 'Build solution ($(Build.Configuration))'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: dotnet build
  displayName: 'Build solution'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: dotnet test -c $(Build.Configuration) --no-build
  displayName: 'Run unit tests ($(Build.Configuration))'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: dotnet test --no-build
  displayName: 'Run unit tests'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: CopyFiles@2
  displayName: 'Stage build artifacts'
  inputs:
    contents: '**/bin/$(Build.Configuration)/corex.*.nupkg'
    targetFolder: $(Build.ArtifactStagingDirectory)
    cleanTargetFolder: true
    flattenFolders: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish build artifacts'
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
    ArtifactName: 'nuget-packages'